/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two
 * terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 */

package main

import (
	"fmt"
	"math"
)

const Sqrt5 float64 = 2.2360679775
const Phi float64 = 1.61803398875

func Fibterm(n int) float64 {
	return math.Floor(0.5 + (math.Pow(Phi, float64(n+1)) / Sqrt5))
}

func main() {
	sum := 0
	for i := 0; ; i++ {
		x := int(Fibterm(i))
		if x%2 == 0 {
			sum += x
		}
		if x > 4e6 {
			break
		}
	}
	fmt.Println(sum)
}
