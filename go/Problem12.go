/*
 * The sequence of triangle numbers is generated by adding the natural numbers. So
 * the 7^th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten
 * terms would be:
 *
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 * Let us list the factors of the first seven triangle numbers:
 *
 *      1: 1
 *      3: 1,3
 *      6: 1,2,3,6
 *     10: 1,2,5,10
 *     15: 1,3,5,15
 *     21: 1,3,7,21
 *     28: 1,2,4,7,14,28
 *
 * We can see that 28 is the first triangle number to have over five divisors.
 *
 * What is the value of the first triangle number to have over five hundred
 * divisors?
 */
package main

import "fmt"

func CountDivisors(x int) int {
	result := 1
	i := 1
	d := 2
	for x >= d {
		if x%d == 0 {
			x /= d
			i++
		} else {
			result *= i
			i = 1
			d++
		}
	}
	result *= i
	return result
}

func main() {
	for i := 0; ; i++ {
		for j := 1; ; j++ {
			i += j
			if CountDivisors(i) >= 500 {
				fmt.Println(i)
				return
			}
		}
	}
}
