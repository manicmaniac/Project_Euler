<?php
/*
 * The sequence of triangle numbers is generated by adding the natural numbers. So
 * the 7^th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten
 * terms would be:
 *
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 * Let us list the factors of the first seven triangle numbers:
 *
 *      1: 1
 *      3: 1,3
 *      6: 1,2,3,6
 *     10: 1,2,5,10
 *     15: 1,3,5,15
 *     21: 1,3,7,21
 *     28: 1,2,4,7,14,28
 *
 * We can see that 28 is the first triangle number to have over five divisors.
 *
 * What is the value of the first triangle number to have over five hundred
 * divisors?
 */

function triangularNumbers() {
    for ($i = 0; $i != INF; $i++) {
        yield $i * ($i + 1) / 2;
    }
}

function factor($x) {
    $res = [];
    while ($x % 2 == 0) {
        $res[2] = (isset($res[2]) ? $res[2] : 0) + 1;
        $x /= 2;
    }
    $d = 3;
    while ($x >= $d) {
        if ($x % $d) {
            $d += 2;
        } else {
            $res[$d] = (isset($res[$d]) ? $res[$d] : 0) + 1;
            $x /= $d;
        }
    }
    return $res;
}

function divisors($x) {
    if ($x <= 1) {
        return 0;
    }
    $factors = factor($x);
    $factors = array_map(function($x) {
        return $x + 1;
    }, $factors);
    $factors = array_values($factors);
    return array_reduce($factors, function($x, $y) {
        return $x * $y;
    }, 1);
}

foreach (triangularNumbers() as $i) {
    if (divisors($i) >= 500) {
        echo $i;
        break;
    }
}

