/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two
 * terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 */
#import <Foundation/Foundation.h>

@interface PEFibonacciEnumerator : NSEnumerator
@end

@implementation PEFibonacciEnumerator {
@private
    NSInteger _x;
    NSInteger _y;
}

- (instancetype)init {
    self = [super init];
    if (self) {
        _x = 0;
        _y = 1;
    }
    return self;
}

- (id)nextObject {
    NSInteger tmp = _x;
    _x = _y;
    _y += tmp;
    return [NSNumber numberWithInteger:_x];
}

@end

int main(void) {
    @autoreleasepool {
        NSUInteger sum = 0;
        PEFibonacciEnumerator *enumerator = [[PEFibonacciEnumerator alloc] init];
        for (NSNumber *number in enumerator) {
            NSInteger i = [number integerValue];
            if (i > 4e6) {
                break;
            }
            if (i % 2 == 0) {
                sum += i;
            }
        }
        [enumerator release];
        NSLog(@"%ld", sum);
    }
    return EXIT_SUCCESS;
}
