/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two
 * terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 */

import java.util.Iterator;
import java.util.PrimitiveIterator;

public class Problem2 {
    public static class Fibonacci implements Iterable<Long> {
        @Override
        public Iterator<Long> iterator() {
            return new FibonacciIterator();
        }

        private static class FibonacciIterator implements PrimitiveIterator.OfLong {
            private long a = 1;
            private long b = 1;

            @Override
            public boolean hasNext() {
                return true;
            }

            @Override
            public long nextLong() {
                long tmp = a;
                a = b;
                b += tmp;
                return a;
            }
        }
    }

    public static void main(String args[]) {
        Fibonacci fibonacci = new Fibonacci();
        long answer = 0;
        for (long x : fibonacci) {
            if (x >= 4000000) {
                break;
            }
            if (x % 2 == 0) {
                answer += x;
            }
        }
        System.out.println(answer);
    }
}
